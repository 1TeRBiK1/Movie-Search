{"version":3,"sources":["Movies/Header.jsx","Movies/Movie.jsx","Movies/Main.jsx","App.js","index.js"],"names":["Header","searchMovies","errorSearch","useState","searchValue","setSearchValue","input","defaultValue","value","setValue","default","onChange","e","target","placeholder","type","autoComplete","className","clear","useSearchForm","refInput","useRef","onSubmit","preventDefault","current","blur","trim","ref","setColorRating","rating","Movie","info","imdbID","setRating","useEffect","fetch","then","response","json","data","console","log","imdbRating","catch","useRating","src","Poster","href","Title","Main","movies","map","movie","App","setMovies","error","setError","newSearch","nameFilms","Response","Search","ReactDOM","render","document","getElementById"],"mappings":"uMAoBe,SAASA,EAAT,GAAgD,IAA9BC,EAA6B,EAA7BA,aAAcC,EAAe,EAAfA,YAAe,EAElBC,mBAAS,YAFS,mBAElDC,EAFkD,KAErCC,EAFqC,KAIpDC,EApBV,WAA0C,IAAnBC,EAAkB,uDAAJ,GAAI,EACXJ,mBAASI,GADE,mBAC9BC,EAD8B,KACvBC,EADuB,KAErC,MAAO,CACHC,QAAS,CACLF,QACAG,SAAU,SAAAC,GAAC,OAAIH,EAASG,EAAEC,OAAOL,QACjCM,YAAa,YACbC,KAAM,SACNC,aAAc,MACdC,UAAW,UAEfT,MAAO,kBAAMA,GACbU,MAAO,kBAAMT,EAAS,MAQZU,GAERC,EAAWC,iBAAO,MAYxB,OACI,qCACI,oBAAIJ,UAAU,cAAd,0BACA,sBAAKA,UAAU,SAAf,UACI,sBAAMK,SAdlB,SAAgBV,GACZA,EAAEW,iBACFH,EAASI,QAAQC,OACbnB,EAAME,QAAQkB,SACdzB,EAAaK,EAAME,SACnBH,EAAeC,EAAME,SACrBF,EAAMY,UAQF,SACI,iDAAYZ,EAAMI,SAAlB,IAA4BiB,IAAKP,OAErC,uBAAMH,UAAU,SAAhB,UAA0Bf,EAAc,iBAAmB,eAA3D,IAA4EE,WC7B5F,SAASwB,EAAeC,GACpB,OAAGA,GAAU,IAAY,QACjBA,GAAU,IAAY,SAClB,MAGD,SAASC,EAAT,GAAuB,IAAPC,EAAM,EAANA,KAErBF,EAtBV,SAAmBG,GAAS,IAAD,EACO7B,mBAAS,IADhB,mBACf0B,EADe,KACPI,EADO,KAWvB,OATAC,qBAAU,WACNC,MAAM,8BAAD,OAA+BH,EAA/B,qBACJI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACFC,QAAQC,IAAIF,GACZN,EAAUM,EAAKG,eAClBC,OAAM,SAAC/B,GAAD,OAAO4B,QAAQC,IAAI7B,QAE5B,IACKiB,EAWQe,CAAUb,EAAKC,QAC9B,OACI,qBAAKf,UAAU,gBAAf,SACI,sBAAKA,UAAU,QAAf,UACI,qBAAK4B,IAAKd,EAAKe,OAAQ7B,UAAY,WACnC,sBAAKA,UAAY,YAAjB,UACI,sBAAMA,UAAU,aAAhB,SACI,mBAAG8B,KAAI,qCAAgChB,EAAKC,QAAUnB,OAAO,SAA7D,SAAuEkB,EAAKiB,UAEhF,sBAAM/B,UAAS,iBAAYW,EAAeC,IAA1C,SAAsDA,YC7B3D,SAASoB,EAAT,GAAwB,IAATC,EAAQ,EAARA,OAC1B,OACI,qBAAKjC,UAAU,kBAAf,SACKiC,EAAOC,KAAI,SAAAC,GAAK,OAAI,cAACtB,EAAD,CAAOC,KAAMqB,GAAYA,EAAMpB,aC0BjDqB,MA3Bf,WAAgB,IAAD,EAEiBlD,mBAAS,IAF1B,mBAEL+C,EAFK,KAEGI,EAFH,OAGenD,oBAAS,GAHxB,mBAGLoD,EAHK,KAGEC,EAHF,KAKb,SAASC,IAAmC,IAAzBC,EAAwB,uDAAZ,WAC7BvB,MAAM,8BAAD,OAA+BuB,EAA/B,4BACFtB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACiB,SAAlBA,EAAKoB,SAAsBH,GAAS,IAErCA,GAAS,GACTF,EAAUf,EAAKqB,YAOvB,OAFA1B,qBAAW,kBAAMuB,MAAa,IAG5B,sBAAKxC,UAAU,MAAf,UACE,cAACjB,EAAD,CAAQC,aAAcwD,EAAWvD,YAAaqD,IAC7CA,EAAQ,wBAAU,cAACN,EAAD,CAAMC,OAAWA,QCvB1CW,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.c50e3826.chunk.js","sourcesContent":["import React, { useRef, useState } from 'react'\r\n\r\n\r\n\r\nfunction useSearchForm(defaultValue ='') {\r\n    const [value, setValue] = useState(defaultValue)\r\n    return {\r\n        default: {\r\n            value,\r\n            onChange: e => setValue(e.target.value),\r\n            placeholder: 'Search...',\r\n            type: 'search',\r\n            autoComplete: \"off\",\r\n            className: \"search\"\r\n        },\r\n        value: () => value,\r\n        clear: () => setValue('')\r\n    }\r\n}\r\n\r\nexport default function Header({ searchMovies, errorSearch }) {\r\n\r\n    const [ searchValue, setSearchValue ] = useState('Avengers')\r\n\r\n    const input = useSearchForm()\r\n\r\n    const refInput = useRef(null)\r\n\r\n    function search(e) {\r\n        e.preventDefault()\r\n        refInput.current.blur()\r\n        if (input.value().trim()){\r\n            searchMovies(input.value())\r\n            setSearchValue(input.value())\r\n            input.clear()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h2 className=\"movieSearch\">Movie Search</h2>\r\n            <div className=\"header\">\r\n                <form onSubmit={search}>\r\n                    <input  {...input.default}  ref={refInput}/>\r\n                </form>\r\n                <span className=\"result\">{errorSearch ? 'Not found for ' : 'Results for '} {searchValue}</span>\r\n            </div>\r\n        </>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\n\r\nfunction useRating(imdbID) {\r\n    const [ rating, setRating ] = useState('')\r\n    useEffect(() => {\r\n        fetch(`https://www.omdbapi.com/?i=${imdbID}&apikey=912e5ad3`)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.log(data)\r\n            setRating(data.imdbRating)})\r\n        .catch((e) => console.log(e))\r\n        \r\n    },[])\r\n    return rating\r\n}\r\n\r\nfunction setColorRating(rating){\r\n    if(rating >= 7.5) return 'green'\r\n    else if(rating >= 5.5) return 'orange'\r\n    else return 'red'\r\n}\r\n\r\nexport default function Movie({info}){\r\n\r\n    const rating = useRating(info.imdbID)\r\n    return (\r\n        <div className=\"containerFilm\">\r\n            <div className=\"movie\">\r\n                <img src={info.Poster} className = \"poster\" />\r\n                <div className = \"movieInfo\">\r\n                    <span className=\"titleMovie\">\r\n                        <a href={`https://www.imdb.com/title/${info.imdbID}`} target=\"_blank\">{info.Title}</a>\r\n                    </span>\r\n                    <span className={`rating ${setColorRating(rating)}`}>{rating}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport Movie from './Movie'\r\n\r\n\r\nexport default function Main({movies}){\r\n    return (\r\n        <div className=\"containerMovies\">\r\n            {movies.map(movie => <Movie info={movie} key={movie.imdbID}/>)}\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\nimport Header from './Movies/Header'\nimport Main from './Movies/Main'\n\n\n\nfunction App() {\n\n  const [ movies, setMovies ] = useState([])\n  const [ error, setError ] = useState(false)\n\n  function newSearch(nameFilms = 'Avengers') {\n    fetch(`https://www.omdbapi.com/?s=${nameFilms}&page=1&apikey=25be5195`)\n      .then(response => response.json())\n      .then(data => {\n        if(data.Response !== \"True\" ) setError(true)\n        else {\n          setError(false)\n          setMovies(data.Search)\n        }\n      })\n  }\n\n  useEffect( () => newSearch(), [] )\n\n  return (\n    <div className=\"App\">\n      <Header searchMovies={newSearch} errorSearch={error}/>\n      {error ? <div /> : <Main movies = { movies } />}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}